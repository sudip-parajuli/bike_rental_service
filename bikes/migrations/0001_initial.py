# Generated by Django 5.1.6 on 2025-02-12 06:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the bike (e.g., Honda Activa).', max_length=100)),
                ('type', models.CharField(choices=[('scooter', 'Scooter'), ('motorcycle', 'Motorcycle'), ('electric', 'Electric Bike')], help_text='Type of bike (e.g., scooter, motorcycle).', max_length=20)),
                ('brand', models.CharField(help_text='Brand of the bike (e.g., Honda, Yamaha).', max_length=50)),
                ('model_year', models.PositiveIntegerField(help_text='Year of manufacture.')),
                ('mileage', models.DecimalField(blank=True, decimal_places=2, help_text='Mileage of the bike (optional).', max_digits=5, null=True)),
                ('description', models.TextField(help_text='Detailed description of the bike.', max_length=500)),
                ('price_per_day', models.DecimalField(decimal_places=2, help_text='Rental price per day.', max_digits=10)),
                ('availability_status', models.BooleanField(default=True, help_text='Indicates whether the bike is available for booking.')),
                ('is_approved', models.BooleanField(default=False, help_text='Indicates whether the bike is approved by the admin.')),
                ('image', models.ImageField(default='default_bike.png', help_text='Image of the bike.', upload_to='bikes/')),
                ('slug', models.SlugField(blank=True, help_text='SEO-friendly URL slug for the bike.', null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp for when the bike was added.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp for the last update.')),
                ('owner', models.ForeignKey(help_text='Owner of the bike.', on_delete=django.db.models.deletion.CASCADE, related_name='bikes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
